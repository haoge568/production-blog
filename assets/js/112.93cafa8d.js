(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{649:function(t,e,r){"use strict";r.r(e);var a=r(1),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" react生命周期")]),t._v(" "),r("h2",{attrs:{id:"class组件-类-组件的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class组件-类-组件的生命周期"}},[t._v("#")]),t._v(" class组件（类）组件的生命周期")]),t._v(" "),r("h3",{attrs:{id:"挂载-当组件实例被创建并插入dom中-的时候-生命周期的调用顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#挂载-当组件实例被创建并插入dom中-的时候-生命周期的调用顺序"}},[t._v("#")]),t._v(" 挂载（当组件实例被创建并插入DOM中）的时候 生命周期的调用顺序")]),t._v(" "),r("ol",[r("li",[t._v("构造函数  constructor()  初始化状态")])]),t._v(" "),r("p",[t._v("`")]),t._v(" "),r("p",[t._v("static getDerivedStateFromProps(nextprops,prevstate)\n根据新的属性(props)生成新的状态(state)\n参数是新的属性props和老的状态，此生命周期不常用\n`")]),t._v(" "),r("ol",[r("li",[t._v("render()  把虚拟dom变成真实dom并插入到dom元素中")]),t._v(" "),r("li",[t._v("componentDidMount() dom挂载完成")])]),t._v(" "),r("ul",[r("li",[t._v("组件的渲染顺序  父组件先渲染(父组件render之后)  子组件开始渲染  子组件挂载完成之后(componentDidMount)父组件最后挂载完成(componentDidMount)")])]),t._v(" "),r("h3",{attrs:{id:"组件更新-组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组件更新-组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下"}},[t._v("#")]),t._v(" 组件更新 组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下")]),t._v(" "),r("ol",[r("li",[t._v("static getDerivedStateFromProps()")]),t._v(" "),r("li",[t._v("shouldComponentUpdate()")])]),t._v(" "),r("ul",[r("li",[t._v("如果 shouldComponentUpdate返回的是false 则不在继续")])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("render()")]),t._v(" "),r("li",[t._v("getSnapshotBeforeUpdate() 获取dom更新前的快照")]),t._v(" "),r("li",[t._v("componentDidUpdate()  会在更新后会被立即调用。首次渲染不会执行此方法。")])]),t._v(" "),r("h4",{attrs:{id:"卸载-当组件从-dom-中移除时会调用如下方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#卸载-当组件从-dom-中移除时会调用如下方法"}},[t._v("#")]),t._v(" 卸载 当组件从 DOM 中移除时会调用如下方法")]),t._v(" "),r("p",[t._v("componentWillUnmount()")]),t._v(" "),r("h4",{attrs:{id:"生命周期流程-有更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期流程-有更新"}},[t._v("#")]),t._v(" 生命周期流程(有更新)")]),t._v(" "),r("p",[t._v("construtor -> getDerivedStateFromProps（静态方法）-> 询问是否需要更新->shouldComponentUpdate不需要(中断)\n5. componentDidUpdate()  会在更新后会被立即调用。首次渲染不会执行此方法。\nconstrutor -> getDerivedStateFromProps（静态方法）-> 询问是否需要更新->shouldComponentUpdate需要-> render(渲染)->getSnapshotBeforeUpdate(获取到更新的dom) -> componentDidUpdate")]),t._v(" "),r("h2",{attrs:{id:"render-阶段-render及之前的生命周期-纯净且不包含副作用。可能会被-react-暂停-中止或重新启动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#render-阶段-render及之前的生命周期-纯净且不包含副作用。可能会被-react-暂停-中止或重新启动"}},[t._v("#")]),t._v(" Render 阶段（Render及之前的生命周期）纯净且不包含副作用。可能会被 React 暂停，中止或重新启动")]),t._v(" "),r("p",[t._v("construtor render 初始化状态和接收props参数")]),t._v(" "),r("h2",{attrs:{id:"pre-commit-阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pre-commit-阶段"}},[t._v("#")]),t._v(" “Pre-commit 阶段”")]),t._v(" "),r("p",[t._v("可以读取 DOM。 getSnapshotBeforeUpdate")]),t._v(" "),r("h2",{attrs:{id:"commit-阶段-可以使用-dom-运行副作用-安排更新。-重点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commit-阶段-可以使用-dom-运行副作用-安排更新。-重点"}},[t._v("#")]),t._v(" “commit 阶段” 可以使用 DOM，运行副作用，安排更新。(重点)")]),t._v(" "),r("p",[t._v("componentDidMount  componentDidUpdate\ncomponentWillUnmount")]),t._v(" "),r("h2",{attrs:{id:"static-getderivedstatefromerror"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#static-getderivedstatefromerror"}},[t._v("#")]),t._v(" static getDerivedStateFromError()")]),t._v(" "),r("p",[t._v("组件报错会调用这个生命周期，参数是error")])])}),[],!1,null,null,null);e.default=o.exports}}]);