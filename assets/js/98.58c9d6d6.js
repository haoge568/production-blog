(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{632:function(t,s,n){"use strict";n.r(s);var a=n(1),p=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"jq总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jq总结"}},[t._v("#")]),t._v(" jq总结")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq的优点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("封装方法多\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("隐式迭代\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("没有兼容问题\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("代码简洁\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("入口函数 优缺点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("$"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    js的入口函数需要页面全部加载完成才执行，\n    jq的入口函数只需要基本的标签加载完就可以执行。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq和js转换 为什么转换"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $dv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#dv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jQuery对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $dv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//DOM对象")]),t._v("\n    方法不通用，dom对象只能使用dom的方法，而jq对象只能使用jq的方法。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq对象和dom对象的区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jq对象是一个包装集")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("伪数组"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选择器及作用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("id选择器 获取指定id的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("类选择器 获取同一类"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("标签选择器 获取相同标签的所有元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("交集选择器 获取满足所有条件的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("并集选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取满足条件之一的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("逗号隔开"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v("子代选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取第一代的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("使用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v("后代选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取所有子级的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("使用空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v("过滤选择器\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  获取指定索引的元素\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("odd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 获取索引是奇数的元素\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("even")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取索引是偶数的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v("筛选选择器\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取元素的第一代元素 相当于子选择器\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取元素所有的子元素 相当于后代选择器\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("siblings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取元素的兄弟元素 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sibings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ul"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  获取父级元素\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      获取指定索引的元素\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取下一个兄弟元素\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prev")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取上一个兄弟元素\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq的事件加载"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("一是$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    二是ready，表示文档结构已经加载完成（不包含图片等非文字媒体文件），\n    三是load，指示页面包含图片等文件在内的所有元素都加载完成。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("链式编程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    对象调用方法后返回的还是这个对象本身\n    优点：省略重复性的代码\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("解决断链问题"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("调用end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法。返回链被破坏前的对象。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("动画效果及参数"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#dv'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("animate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    第一个参数：对象，里面可以传需要动画的样式\n    第二个参数：speed 动画的执行时间\n    第三个参数：动画的执行效果\n    第四个参数：回调函数\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  显示隐藏\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slideUp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slideDown")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  滑入滑出\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fadeIn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fadeOut")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  淡入淡出\n        参数"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fast")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("normal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        参数"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 回调函数 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 动画执行完毕以后回调函数才执行\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("停止动画"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 停止当前正在执行的动画\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 是否停止动画队列中所有的动画\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 停止当前动画并且显示当前动画的最终效果\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("删除元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("种"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 清空节点及删除其子节点，自身并不会删除\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：删除所有后代节点及自身，与该节点绑定的事件删除后也将解除绑定\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("detach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：删除所有后代节点及自身，但与该节点绑定的事件删除后依然保留\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keycode 键盘编码"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 键盘对应编码")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("为元素绑定多个事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("解绑事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("undelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unbind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("off")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("子级委托父级绑定事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n对象方式绑定多个相同事件，只会运行最后一个\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("懒加载原理"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    为了节省用户流量和提高页面性能，\n    可以在用户浏览到当前资源的时候，\n    再对资源进行请求和加载。\n\n    如果是图片"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("可以指定data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src为真实的图片地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("src为站位的图片。\n    当资源进入视口的时候，将src属性值替换成data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src的值。\n    使用元素距离文档顶部的距离offsetTop和scrollTop是否小于视口高度来判断\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("防抖动"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    将几次操作合并为一次操作进行。\n    只有最后一次操作能被触发。\n    减少服务器请求次数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("提高性能\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("节流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    节流函数不管事件触发有多频繁，\n    都会保证在规定时间内一定会执行一次真正的事件处理函数，\n    而防抖动只是在最后一次事件后才触发一次函数。\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("each遍历对象"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#uu>li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ele")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-------'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" opacity "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ele是DOM元素,使用时要转成jQ对象")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'opacity'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("opacity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("$让权"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    把$的所有功能给了money\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" money "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("noConflict")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("只创建一个元素"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    有则删除，无则创建\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#btn'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        通过length属性判断该元素是否存在\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'存在'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不存在'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("请求响应流程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    客户端发送请求。\n    请求首先会经过路由器处理后，发送给解析器，解析得到公网"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址。\n    根据公网"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址找到服务器，服务器返回响应。\n    再经过路由器返回到浏览器。\n    客户端"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("路由器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("解析器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("ip地址"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("服务器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("路由器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("浏览器\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("动态网站和静态网站的区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    静态页面是不能随时改动的，\n    如果想改动，必须在页面上修改，然后再覆盖原来的页面，\n\n    动态页面是可以随时改变内容的，\n    可以在后台随时更新网站的内容，\n    前台页面的内容也会随之更新。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("超全局变量"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" $_GET –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" 传送方式\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" $_POST –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" post 传送方式\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" $_REQUEST –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 可以接收到 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" 和 post 两种方式的值\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GLOBALS")]),t._v(" –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 引用全局作用域中可用的全部变量\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" $_FILES –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 上传文件使用\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" $_SERVER –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 系统环境变量\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v(" $_SESSION –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 用于会话控制\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v(" $_COOKIE –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 用于会话控制\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v(" $_ENV –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 服务器端环境变量\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ajax请求步骤"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("创建ajax对象\n      需要处理兼容问题\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("准备发送数据\n      xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("提交方式"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 提交路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 异步同步"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("执行发送数据\n      get"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      post"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 加上请求头\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("指定回调函数\n\n《ajax回调函数的具体步骤 各数值代表的含义》\n    一"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onreadystatechange\n    二"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("初始化对象\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("发送数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("返回数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("解析数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("解析完成，正常使用\n    三"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" 数据正常使用\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" 没有找到资源\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" 服务器端错误\n\n《同步和异步的不同》\n    同步，是所有的操作都做完，才返回给用户结果"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户体验不好。\n\n    异步，不用等所有操作等做完，就响应用户请求"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户体验较好。\n\njs事件处理机制\n\n《同源策略》\n 是浏览器的一种安全策略，同源是指url请求地址中域名，协议名，端口全部相同。\n 只要有一种不同就是跨域，在同源策略下，浏览器不允许ajax跨域获取数据。\n\n《jaonp作用》\n    解决跨域问题\n\n《jsonp原理》\n        动态创建script标签"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 通过src属性发送请求\n    服务端响应给我们的是函数调用\n    所以我们需要在前端创建一个函数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    并且这两个函数名需要保持一致，最终实现跨域。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq的优点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("封装方法多\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("隐式迭代\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("没有兼容问题\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("代码简洁\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("入口函数 优缺点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("$"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    js的入口函数需要页面全部加载完成才执行，\n    jq的入口函数只需要基本的标签加载完就可以执行。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq和js转换 为什么转换"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $dv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#dv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jQuery对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $dv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//DOM对象")]),t._v("\n    方法不通用，dom对象只能使用dom的方法，而jq对象只能使用jq的方法。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq对象和dom对象的区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jq对象是一个包装集")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("伪数组"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选择器及作用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("id选择器 获取指定id的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("类选择器 获取同一类"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("标签选择器 获取相同标签的所有元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("交集选择器 获取满足所有条件的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("并集选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取满足条件之一的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("逗号隔开"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v("子代选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取第一代的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("使用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v("后代选择器 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("获取所有子级的元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("使用空格"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v("过滤选择器\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  获取指定索引的元素\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("odd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 获取索引是奇数的元素\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("even")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取索引是偶数的元素\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v("筛选选择器\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("children")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取元素的第一代元素 相当于子选择器\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取元素所有的子元素 相当于后代选择器\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("siblings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("获取元素的兄弟元素 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sibings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ul"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  获取父级元素\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      获取指定索引的元素\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取下一个兄弟元素\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prev")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    获取上一个兄弟元素\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jq的事件加载"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("一是$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    二是ready，表示文档结构已经加载完成（不包含图片等非文字媒体文件），\n    三是load，指示页面包含图片等文件在内的所有元素都加载完成。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("链式编程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    对象调用方法后返回的还是这个对象本身\n    优点：省略重复性的代码\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("解决断链问题"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("调用end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法。返回链被破坏前的对象。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("动画效果及参数"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#dv'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("animate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    第一个参数：对象，里面可以传需要动画的样式\n    第二个参数：speed 动画的执行时间\n    第三个参数：动画的执行效果\n    第四个参数：回调函数\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  显示隐藏\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slideUp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slideDown")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  滑入滑出\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fadeIn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fadeOut")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  淡入淡出\n        参数"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fast")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("normal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        参数"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 回调函数 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 动画执行完毕以后回调函数才执行\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("停止动画"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 停止当前正在执行的动画\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 是否停止动画队列中所有的动画\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 停止当前动画并且显示当前动画的最终效果\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("删除元素")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("种"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 清空节点及删除其子节点，自身并不会删除\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：删除所有后代节点及自身，与该节点绑定的事件删除后也将解除绑定\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("detach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：删除所有后代节点及自身，但与该节点绑定的事件删除后依然保留\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keycode 键盘编码"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 键盘对应编码")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("为元素绑定多个事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("解绑事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("undelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unbind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("off")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("子级委托父级绑定事件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n对象方式绑定多个相同事件，只会运行最后一个\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("懒加载原理"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    为了节省用户流量和提高页面性能，\n    可以在用户浏览到当前资源的时候，\n    再对资源进行请求和加载。\n\n    如果是图片"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("可以指定data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src为真实的图片地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("src为站位的图片。\n    当资源进入视口的时候，将src属性值替换成data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src的值。\n    使用元素距离文档顶部的距离offsetTop和scrollTop是否小于视口高度来判断然而\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("防抖动"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    将几次操作合并为一次操作进行。\n    只有最后一次操作能被触发。\n    减少服务器请求次数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("提高性能\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("节流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    节流函数不管事件触发有多频繁，\n    都会保证在规定时间内一定会执行一次真正的事件处理函数，\n    而防抖动只是在最后一次事件后才触发一次函数。\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("each遍历对象"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#uu>li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ele")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-------'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" opacity "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ele是DOM元素,使用时要转成jQ对象")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'opacity'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("opacity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("$让权"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    把$的所有功能给了money\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" money "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("noConflict")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("只创建一个元素"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    有则删除，无则创建\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#btn'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        通过length属性判断该元素是否存在\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'存在'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不存在'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("请求响应流程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    客户端发送请求。\n    请求首先会经过路由器处理后，发送给解析器，解析得到公网"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址。\n    根据公网"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("地址找到服务器，服务器返回响应。\n    再经过路由器返回到浏览器。\n    客户端"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("路由器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("解析器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("ip地址"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("服务器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("路由器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("浏览器\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("动态网站和静态网站的区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    静态页面是不能随时改动的，\n    如果想改动，必须在页面上修改，然后再覆盖原来的页面，\n\n    动态页面是可以随时改变内容的，\n    可以在后台随时更新网站的内容，\n    前台页面的内容也会随之更新。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("超全局变量"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" $_GET –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" 传送方式\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" $_POST –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" post 传送方式\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" $_REQUEST –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 可以接收到 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" 和 post 两种方式的值\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GLOBALS")]),t._v(" –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 引用全局作用域中可用的全部变量\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" $_FILES –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 上传文件使用\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" $_SERVER –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 系统环境变量\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v(" $_SESSION –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 用于会话控制\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v(" $_COOKIE –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 用于会话控制\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v(" $_ENV –"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 服务器端环境变量\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ajax请求步骤"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("创建ajax对象\n      需要处理兼容问题\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("准备发送数据\n      xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("提交方式"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 提交路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 异步同步"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("执行发送数据\n      get"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      post"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 加上请求头\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("指定回调函数\n\n《ajax回调函数的具体步骤 各数值代表的含义》\n    一"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onreadystatechange\n    二"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("初始化对象\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("发送数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("返回数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("解析数据\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("解析完成，正常使用\n    三"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" 数据正常使用\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" 没有找到资源\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" 服务器端错误\n\n《同步和异步的不同》\n    同步，是所有的操作都做完，才返回给用户结果"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户体验不好。\n\n    异步，不用等所有操作等做完，就响应用户请求"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户体验较好。\n\n这个同步的意思是当"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("代码加载到当前"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AJAX")]),t._v("的时候会把页面里所有的代码停止加载，\n页面出去假死状态，当这个"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AJAX")]),t._v("执 行完毕后才会继续运行其他代码页面假死状态解除。\n而异步则这个"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AJAX")]),t._v("代码运行中的时候其他代码一样可以运行。\n\n\n\n《同源策略》\n 是浏览器的一种安全策略，同源是指url请求地址中域名，协议名，端口全部相同。\n 只要有一种不同就是跨域，在同源策略下，浏览器不允许ajax跨域获取数据。\n\n《jaonp作用》\n    解决跨域问题\n\n《jsonp原理》\n        动态创建script标签"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 通过src属性发送请求\n    服务端响应给我们的是函数调用\n    所以我们需要在前端创建一个函数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    并且这两个函数名需要保持一致，最终实现跨域。\n\n《ajax的作用》\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("显示新的html内容，而不用载入整个页面\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("提交一个表单，并且立即显示结果\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("登录而不用跳转到另一个页面\n\n《"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("和post提交的区别》\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v("的请求参数是在url中传递，需要注意编码问题\n    post的请求参数是在请求体中传递，需要设置请求头信息\n\n《ajax的数据格式》\n    xml json\n\n    添加"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    移除"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    判断"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    切换"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toggleClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法在被选元素的结尾（仍然在内部）插入指定内容\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法在被选元素的开头（仍位于内部）插入指定内容\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法在被选元素的后面插入一个指定的元素\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法在被选元素的前面插入一个指定的元素\n\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("客户端 php 阿帕奇三者如何协调工作的"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n客户端发送请求到阿帕奇，静态数据由阿帕奇处理完成后返回客户端。\n动态数据由阿帕奇发送到php进行处理，处理完成发送给阿帕奇，再有阿帕奇返回客户端。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("php三种输出方式"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nvar_dump函数 输出变量的内容、类型或字符串的内容、类型、长度。常用来调试。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 输出一个字符串\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 输出多个字符串\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("isset、empty、is_null的区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nisset 判断变量是否定义或者是否为空\n\nempty：判断变量的值是否为空，能转换为"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("的都是空，为空返回"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，反之返回"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_null：检测传入的值")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值、变量、表达式"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("是否为"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jquery的"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("这个属性"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n默认是"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("：异步，"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("：同步。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("如何解决跨域问题"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n理解跨域的概念：协议、域名、端口都相同才同域，否则都是跨域\n出于安全考虑，服务器不允许ajax跨域获取数据，但是可以跨域获取文件内容，所以基于这一点，可以动态创建script标签，使用标签的src属性访问js文件的形式获取js脚本，并且这个js脚本中的内容是函数调用，该函数调用的参数是服务器返回的数据，为了获取这里的参数数据，需要事先在页面中定义回调函数，在回调函数中处理服务器返回的数据，这就是解决跨域问题的主流解决方案\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Ajax的最大的特点是什么"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Ajax可以实现异步效果，实现页面局部刷新，带来更好的用户体验；按需获取数据，节约带宽资源；\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ajax的缺点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、ajax不支持浏览器back按钮。\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、安全问题 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AJAX")]),t._v("暴露了与服务器交互的细节。\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、对搜索引擎的支持比较弱。\n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、破坏了程序的异常机制。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ajax请求时，如何解释json数据"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n推荐使用"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("更靠谱，对数据的安全性更好。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("和"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v("的安全性更高，\n默认"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("的端口号为"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("，\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v("的端口号为"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("。\n")])])])])}),[],!1,null,null,null);s.default=p.exports}}]);