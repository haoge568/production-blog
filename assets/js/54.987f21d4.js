(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{585:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"css弹性盒子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css弹性盒子"}},[t._v("#")]),t._v(" css弹性盒子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性盒子")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flex Box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("是什么？\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("弹性盒子是 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" 的一种新的布局模式。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" 弹性盒（ Flexible Box  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈfleksəbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  或 flexbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fleks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bɒks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("），是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。\n引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间。\n为什么引入弹性盒子？\n长久以来，唯一可用的且有稳定的跨浏览器兼容性的能用来构建 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 布局的工具只有 float（浮动） 和 position（定位）。它们是既可行，表现也不错的布局方案，但是在某些布局方面它们就有限制，并且难以实现。\n以下简单的布局要求是难以或不可能用这样的工具（ floats 和 positioning）方便且灵活的实现的：\n在父内容里面垂直居中一个块内容。\n使容器的所有子项占用等量的可用宽度"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("高度，而不管页面高度"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("宽度如何调整都可用。\n使多列布局中的所有列采用相同的高度，即使它们包含的内容量不同。\n能解决以上问题的，或许可以用table表格来实现，但是受限于表格的内容形式，它的诸多限制和不合理，在布局世界几乎被淘汰。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("弹性盒布局概念\n在定义方面来说，弹性布局是指通过调整其内元素的宽高，从而在任何显示设备上实现对可用显示空间最佳填充的能力。弹性容器扩展其内元素来填充可用空间，或将其收缩来避免溢出。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("块级布局更侧重于垂直方向、行内布局更侧重于水平方向，与此相对的，弹性盒子布局算法是方向无关的。虽然块级布局对于单独一个页面来说是行之有效的，但其仍缺乏足够的定义来支持那些必须随用户代理")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("不同或设备方向从水平转为垂直等各种变化而变换方向、调整大小、拉伸、收缩的应用程序组件。\n弹性盒子布局主要适用于应用程序的组件及小规模的布局，而（新兴的）栅格布局则针对大规模的布局。这二者都是 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 工作组为在不同用户代理、不同书写模式和其他灵活性要求下的网页应用程序有更好的互操作性而做出的更广泛的努力的一部分。\n示例：\n\nHtml：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("这是弹性盒子头部"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("section"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 这是主体内容区域 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 这是内容章节区域 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    这是内容章节区域"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("section"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ncss：\n首先，我们需要确定将哪些元素将设置为弹性的盒子。然后我们需要给这些 弹性（flexible） 元素的父元素 的display 设置一个特定值。\n在本例中，我们想要设置 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 元素为弹性的，因此我们给 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("section"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("（变成了 flex 容器）设置 display：\nsection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("flex 模型说明\n关于弹性盒子的讨论已经从诸如水平"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("行内轴和垂直"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("块级轴这些术语中解放出来，与此同时，需要有一套新的术语来正确描述此模型。\n下图是一个 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction 属性为 row的弹性容器，意味着其内的弹性项目将根据既定书写模式沿主轴水平排列，其方向为元素的文本流方向，在这个例子里，为从左到右。\n\n当元素表现为 flex 框时，它们沿着两个轴来布局：\n主轴（main axis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈæksɪs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("）是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的列）。该轴的开始和结束被称为 main start 和 main end。\n交叉轴（cross axis）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("krɔ"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end。\n设置了 display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex 的父元素（在本例中是 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("section"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("）被称之为 flex 容器（flex container  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kənˈtenɚ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("）。\n在 flex 容器中表现为柔性的盒子的元素被称之为 flex 项（flex item）（本例中是 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 元素）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("定义一个弹性盒子\n需按以下方式设置 display 属性：\ndisplay "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex  或者  display "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" inline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex\n这样做将元素定义为弹性容器，其子元素则成为弹性项目。值 flex 使弹性容器成为块级元素。值 inline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex 使弹性容器成为单个不可分的行内级元素。\n注意：\ni"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("厂商前缀标记会附加给 display 属性值，而不是加给 display 属性本身。例如：display "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("webkit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex。\nii"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("弹性容器外及弹性子元素内是正常渲染的。弹性盒子只定义了弹性子元素如何在弹性容器内布局。\niii"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("弹性子元素通常在弹性盒子内一行显示。默认情况每个容器只有一行。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("弹性盒子属性\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction 属性指定了弹性子元素在父容器中的位置。\n语法\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" row "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" column "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction的值有"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("row：横向从左到右排列（左对齐），默认的排列方式。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rɪˈvɜ"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("rs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("column：纵向排列。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈkɑ"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("ləm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse：反转纵向排列，从后往前排，最后一项排在最上面。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("justify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content 属性\n内容对齐（justify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content）属性应用在弹性容器上，把弹性项沿着弹性容器的主轴线（main axis）对齐。\n语法：\njustify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around\njustify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content属性值"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start：弹性项目向行头紧挨着填充。这个是默认值。第一个弹性项的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start外边距边线被放置在该行的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start边线，而后续弹性项依次平齐摆放。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end：弹性项目向行尾紧挨着填充。第一个弹性项的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end外边距边线被放置在该行的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end边线，而后续弹性项依次平齐摆放。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center：弹性项目居中紧挨着填充。（如果剩余的自由空间是负的，则弹性项目将在两个方向上同时溢出）。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between：弹性项目平均分布在该行上。如果剩余空间为负或者只有一个弹性项，则该值等同于flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start。否则，第"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个弹性项的外边距和行的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start边线对齐，而最后"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个弹性项的外边距和行的main"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end边线对齐，然后剩余的弹性项分布在该行上，相邻项目的间隔相等。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around：弹性项目平均分布在该行上，两边留有一半的间隔空间。如果剩余空间为负或者只有一个弹性项，则该值等同于center。否则，弹性项目沿该行分布，且彼此间隔相等（比如是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("px），同时首尾两边和弹性容器之间留有一半的间隔（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px）。\n效果图如下：\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 属性\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。\n语法\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" baseline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items属性值解析"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center：弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("baseline：如弹性盒子元素的行内轴与侧轴为同一条，则该值与"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-start'")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("等效。其它情况下，该值将参与基线对齐。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stretch：如果指定侧轴大小的属性值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),t._v("，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'min/max-width/height'")]),t._v("属性的限制。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性用于指定弹性盒子的子元素换行方式。\n语法\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("wrap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("wrap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("initial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("inherit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性值解析"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("nowrap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 默认， "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性容器为单行。该情况下弹性子项可能会溢出容器。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("wrap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性容器为多行。该情况下弹性子项溢出的部分会被放置到新行，子项内部会发生断行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("wrap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("反转 wrap 排列。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content 属性\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content 属性用于修改 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性的行为。类似于 align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 但它不是设置弹性子元素的对齐，而是设置各个行的对齐。\n语法\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content属性值解析"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stretch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("默认。各行将会伸展以占用剩余的空间。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("各行向弹性盒容器的起始位置堆叠。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("各行向弹性盒容器的结束位置堆叠。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("center "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("各行向弹性盒容器的中间位置堆叠。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("各行在弹性盒容器中平均分布。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("弹性子元素属性\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("order排序\norder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈɪntɪdʒɚ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("整数\n用整数值来定义排列顺序，数值小的排在前面。可以为负值。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self 属性用于设置弹性元素自身在侧轴（纵轴）方向上的对齐方式。\n语法\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" auto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" baseline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self 属性值解析"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("auto：如果"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'align-self'")]),t._v("的值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),t._v("，则其计算值为元素的父元素的"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'align-items'")]),t._v("值，如果其没有父元素，则计算值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stretch'")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end：弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center：弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("baseline：如弹性盒子元素的行内轴与侧轴为同一条，则该值与"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-start'")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("等效。其它情况下，该值将参与基线对齐。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stretch：如果指定侧轴大小的属性值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),t._v("，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'min/max-width/height'")]),t._v("属性的限制。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("flex\nflex 属性用于指定弹性子元素如何分配空间。\n语法\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" auto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" initial "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" none "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" inherit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shrink "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("basis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nflex 属性值解析"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("auto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 计算值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("auto")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 计算值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("auto")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("none：计算值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("auto")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherit：从父元素继承")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("：定义弹性盒子元素的扩展比率。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shrink "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("：定义弹性盒子元素的收缩比率。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("basis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：定义弹性盒子元素的默认基准值。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("其他一些使用方法\n对齐\n设置"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin"')]),t._v("值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"auto"')]),t._v("值，自动获取弹性容器中剩余的空间。所以设置垂直方向margin值为"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"auto"')]),t._v("，可以使弹性子元素在弹性容器的两上轴方向都完全居中。\n例如，在第一个弹性子元素上设置了 margin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("right"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 。 它将剩余的空间放置在元素的右侧。\n\n完美的居中\n使用弹性盒子，居中变的很简单，只想要设置 margin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 可以使得弹性子元素在两上轴方向上完全居中。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v("务必注意：\n描述弹性项目如何排布的算法有时会极其棘手。在使用弹性盒子进行设计时，请考虑以下几点，以免碰到不好的意料外状况。\n\n弹性盒子的排布与书写模式是一致的，这意味着排布的主轴起点和主轴终点根据的是开始与结束的位置。\n\n侧轴起点与侧轴终点依赖于开始或前面（before）的位置定义，而这个“前面”依赖于 direction 的值。\n\n只要 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 属性的设置值允许，在弹性框布局中是可以存在分页的。"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" 中的 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("after、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("before 和 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("inside，以及 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v(" 中的 page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("before、page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("after 和 page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("inside 属性在弹性容器上、弹性项目上和弹性项目内均可以使用。\n\n如果浏览器缺少 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 阴影，则该网站可能仍然可用，知识缺少阴影效果。 但是假如浏览器不支持 弹性盒子功能就会完全打破布局，使其不可用。\n\n附：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("弹性盒布局词汇认识：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性容器")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flex container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n包含着弹性项目的父元素。通过设置 display 属性的值为 flex 或 inline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex 来定义弹性容器。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性项目")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flex item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n弹性容器的每个子元素都称为弹性项目。弹性容器直接包含的文本将被包覆成匿名弹性单元。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("轴")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Axis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈæksɪs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("每个弹性框布局包含两个轴。弹性项目沿其依次排列的那根轴称为主轴")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main axis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("。垂直于主轴的那根轴称为侧轴")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cross axis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("确立主轴，定义了主轴的方向")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("正方向或反方向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，指定了内部元素是如何在 flex 容器中布局的。\njustify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content定义了在当前行上，弹性项目沿主轴如何排布。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈdʒʌstəˌfaɪ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 定义了浏览器如何分配顺着父容器主轴的弹性元素之间及其周围的空间。\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 定义了在当前行上，弹性项目沿侧轴默认如何排布。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("əˈlaɪn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self 定义了单个弹性项目在侧轴上应当如何对齐，这个定义会覆盖由 align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 所确立的默认值。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("方向")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Direction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("弹性容器的主轴起点")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("主轴终点")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("和侧轴起点")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cross start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("krɔ"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("侧轴终点")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cross end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("描述了弹性项目排布的起点与终点。它们具体取决于弹性容器的主轴与侧轴中，由 writing"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈraɪtɪŋ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moʊd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("确立的方向（从左到右、从右到左，等等）。\norder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈɔ"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rdə")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("属性将元素与序号关联起来，以此决定哪些元素先出现。\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flow 属性是 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction 和 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ræp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("属性的简写，决定弹性项目如何排布。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("行")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n根据 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性，弹性项目可以排布在单个行或者多个行中。此属性控制侧轴的方向和新行排列的方向。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("尺寸")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dimension"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("根据弹性容器的主轴与侧轴，弹性项目的宽和高中，对应主轴的称为主轴尺寸")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ，对应侧轴的称为 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("侧轴尺寸")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cross size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\nmin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("height 与 min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width 属性初始值将为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("。\nflex 属性是 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("groʊ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("、flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shrink "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ʃrɪŋk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("和 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("basis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ˈbesɪs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("属性的简写，描述弹性项目的整体的伸缩性。\n常用属性：\n属性 描述\ndisplay 指定 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素盒子类型。\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction 指定了弹性容器中子元素的排列方式\njustify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content 设置弹性盒子元素在主轴（横轴）方向上的对齐方式。\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 设置弹性盒子元素在侧轴（纵轴）方向上的对齐方式。\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 设置弹性盒子的子元素超出父容器时是否换行。\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content 修改 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 属性的行为，类似 align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 但不是设置子元素对齐，而是设置行对齐\nflex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flow flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction 和 flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap 的简写\norder 设置弹性盒子的子元素排列顺序。\nalign"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self 在弹性子元素上使用。覆盖容器的 align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items 属性。\nflex 设置弹性盒子的子元素如何分配空间。\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);