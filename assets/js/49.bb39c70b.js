(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{579:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"html-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css"}},[t._v("#")]),t._v(" html+css")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("样式\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("概述\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("指层叠样式表")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Cascading Style Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n样式定义如何显示 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素\n样式通常存储在样式表中\n把样式添加到 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTM")]),t._v("中，是为了解决内容与表现分离的问题\n外部样式表可以极大提高工作效率\n外部样式表通常存储在 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 文件中\n多个样式定义可层叠为一\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("CSS样式解决了一个普遍的问题\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 标签原本被设计为用于定义文档内容。\n通过使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 这样的标签，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。\n由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 标签和属性（比如字体标签和颜色属性）添加到 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。\n为了解决这个问题，万维网联盟（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W3C")]),t._v("），这个非营利的标准化联盟，肩负起了 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 标准化的使命，并在 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),t._v(" 之外创造出样式（Style）。\n所有的主流浏览器均支持层叠样式表。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v("样式表极大地提高了工作效率\n样式表定义如何显示 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素，就像 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v(" 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("css 文件中。通过仅仅编辑一个简单的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。\n由于允许同时控制多重页面的样式和布局，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 可以称得上 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WEB")]),t._v(" 设计领域的一个突破。作为网站开发者，你能够为每个 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素定义样式，并将之应用于任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("多重样式将层叠为一个\n样式表允许以多种方式规定样式信息。样式可以规定在单个的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素中，在 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 页的头元素中，或在一个外部的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 文件中。甚至可以在同一个 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 文档内部引用多个外部样式表。\n层叠次序\n当同一个 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素被不止一个样式定义时，会使用哪个样式呢？\n一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 拥有最高的优先权。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("浏览器缺省设置\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("外部样式表\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("内部样式表（位于 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 标签内部）\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("内联样式（在 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素内部）\n因此，内联样式（在 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 语法\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明。\nselector "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n选择器通常是您需要改变样式的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 元素。\n每条声明由一个属性和一个值组成。\n属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。\n例如：p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("color：red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("……"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("值的不同写法和单位\n除了英文单词 red，我们还可以使用十六进制的颜色值 #ff0000：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #ff0000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n为了节约字节，我们可以使用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 的缩写形式：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #f00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n我们还可以通过两种方法使用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RGB")]),t._v(" 值：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n请注意，当使用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RGB")]),t._v(" 百分比时，即使当值为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 时也要写百分比符号。但是在其他的情况下就不需要这么做了。\n比如说，当尺寸为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 像素时，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 之后不需要使用 px 单位，因为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 就是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，无论单位是什么。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v("引号的作用\n提示：如果值为若干单词，则要给值加引号：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("family"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sans serif"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),t._v("多重声明：\n提示：如果要定义不止一个声明，则需要用分号将每个声明分开。下面的例子展示出如何定义一个红色文字的居中段落。最后一条规则是不需要加分号的，因为分号在英语中是一个分隔符号，不是结束符号。然而，大多数有经验的设计师会在每条声明的末尾都加上分号，这么做的好处是，当你从现有的规则中增减声明时，会尽可能地减少出错的可能性。就像这样：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n你应该在每行只描述一个属性，这样可以增强样式定义的可读性，就像这样：\np "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("align"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("family"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" arial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v("空格和大小写\n大多数样式表包含不止一条规则，而大多数规则包含不止一个声明。多重声明和空格的使用使得样式表更容易被编辑：\nbody "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  background"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" #fff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  margin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  padding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("family"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Georgia"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Palatino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n是否包含空格不会影响 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 在浏览器的工作效果，同样，与 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XHTML")]),t._v(" 不同，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 对大小写不敏感。不过存在一个例外：如果涉及到与 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 文档一起工作的话，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 和 id 名称对大小写是敏感的。\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);