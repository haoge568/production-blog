(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{636:function(t,n,e){"use strict";e.r(n);var s=e(1),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"token详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#token详解"}},[t._v("#")]),t._v(" token详解")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、第一次登录的时候，前端调后端的登陆接口，发送用户名和密码\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、后端收到请求，验证用户名和密码，验证成功，就给前端返回一个 token\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、前端拿到 token，将 token 存储到 localStorage 和 vuex 中，并跳转路由页面\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\_this.userToken = 'Bearer ' + res.data.data.body.token;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将用户 token 保存到 vuex 中")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、前端每次跳转路由，就判断 localStroage 中有无 token ，没有就跳转到登录页面，有则跳转到对应路由页面\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、每次调后端接口，都要在请求头中加 token\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、后端判断请求头中有无 token，有 token，就拿到 token 并验证 token，验证成功就返回数据，验证失败（例如：token 过期）就返回 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("，请求头中没有 token 也返回 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("、如果前端拿到状态码为 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("，就清除 token 信息并跳转到登录页面\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v(" Unauthorized\n当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WWW")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v(" 响应代表着服务器验证已经拒绝了那些证书。如果 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v(" 响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。\n\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);