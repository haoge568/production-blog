(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{617:function(t,s,n){"use strict";n.r(s);var a=n(1),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"html5移动wap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html5移动wap"}},[t._v("#")]),t._v(" html5移动wap")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 实现移动wap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("什么是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v("？\n无线产品提出了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 的理念。此标准的要点是在无线设备上展示因特网内容。\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 指无线应用协议\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 是一种应用程序通信协议\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 被用来访问服务及信息\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 继承于因特网标准\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 针对诸如移动电话的手持设备\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 是一种为微浏览器设计的协议\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 使创建针对移动设备的 web 应用程序成为可能\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 使用标记语言 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("（不是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("）\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 作为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XML")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" 的一种应用被定义\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("无线应用协议（Wireless Application Protocol）\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 是一种用于在无线终端（比如数字移动电话）进行信息服务的主要的标准。\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 标准基于因特网标准（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XML")]),t._v(" 以及 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("）。它包括 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 语言规范、WMLScript 规范以及无线电话应用接口规范（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WTAI")]),t._v("）。\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 由 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 论坛（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" forum ）发布，被爱立信、摩托罗拉、诺基亚以及 Unwired Planet 创建于 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1997")]),t._v(" 年。论坛的成员目前占据着超过 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" 的全球手机市场，同时又是领先的基础设施提供商、软件提供商及其他机构。我们可以在我们的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 论坛页面找到有关 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 论坛的更多信息。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 微浏览器\n为了适合小型无线终端，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v("使用了一种微浏览器。\n微浏览器是一种小型软件，可向硬件、内存和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CPU")]),t._v(" 发布基本的指令。它可以显示用一种由被称为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 的受限标记语言编写的信息。\n微浏览器也可翻译一种被称为 WMLScript 的 JavaScript 简化版。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("什么是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("？\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 指无线标记语言。它是一种从 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 继承而来的标记语言，但是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 基于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XML")]),t._v("，因此它较 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 更严格。\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 被用来创建可显示在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 浏览器中的页面。用"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("编写的页面被称为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DECKS")]),t._v("。"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DECKS")]),t._v(" 是作为一套 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CARDS")]),t._v(" 被构造的。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("什么是 WMLScript？\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 使用 WMLScript 在客户端运行简单的代码。WMLScript 是一种轻量级的 JavaScript 语言。不过，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 脚本并不嵌在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 页面中。"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("页面仅仅含有对脚本 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" 的引用。"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 脚本在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 浏览器运行之前，需要先在服务器上被编译为字节编码。\n请访问我们的 WMLScript 教程，以学习更多有关 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v(" 文档中的脚本的知识。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WAP")]),t._v(" 应用举例\n查看列车时刻表信息\n票务交易\n航班登记\n查看交通信息\n查寻股票价格\n查寻电话号码\n查寻地址\n查寻体育竞赛结果\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("怎么用html5开发wap页面\n那就是，要开发能在移动设备上浏览的网站，我们需要一些方法来确保网站在移动设备上可以如同在桌面浏览器上一样正常运作。\n这样开发用的依然是html5技术，而不是"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("语言。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("移动友好性\n想要开发wap页面，就好保证能在各种移动端设备上完美兼容，所以要保证移动友好性。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("移动友好性要达到的目的：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("使网站在各种屏幕尺寸上都能正常运行。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("如今，用户可以使用各种外形设备访问设备上的网络，包括手机，平板电脑和电子书阅读器。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("为移动用户调整内容\n想想用户在手机上想要在我们的网站上做些什么。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("比如，旅游网站专注于让访问者预订旅行。但是，移动用户可能更感兴趣的是办理登机手续或查看他们的航班是否延误。这就需要调整网站的内容以反映这一点，并满足移动用户的需求。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("即使连接速度很慢，也能为用户提供流畅的体验\n虽然近年来无线信号情况越来越好，但总有信号不良的时候。\n其他：了解我们的客户群体，因为选择移动策略时要使用的浏览器和设备绝对至关重要。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("移动开发方法\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),t._v("单独的网站\n用于移动和桌面的单独站点开发。\n移动Web开发的“独立站点”方法涉及为移动和桌面Web用户创建不同的站点。也就是web页面和wap页面是两个不同网站路径，这种方法有优和劣的方面。\n优势：\n使用用户代理检测将手机上的用户打开到单独的移动网站，通常是在m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com。简而言之，这种技术使用服务器端逻辑同时解决移动Web开发的所有三个目标 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果用户的浏览器看起来像是在手机上，则为他们提供移动内容，为手机格式化并优化速度。\n从概念上讲，这是添加到现有站点的最简单选项，尤其是在使用支持模板的"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CMS")]),t._v("或Web应用程序时。由于只向移动用户发送特定于移动设备的内容，样式和脚本，因此此方法还可以提供此处提供的任何其他选项的最佳性能。最后，它还允许在桌面和移动设备上完全不同的用户体验 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 毕竟它们是两个不同的网站！\n劣势：\n这种方法并非没有缺点。对于初学者，你现在为网站上的每个页面开发和维护两个不同的页面（版本），以便向移动用户访问。\n如果我们使用的是"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CMS")]),t._v("，则可以以最小化此重复的方式排列我们的网站模板。但是，如果移动和桌面模板之间存在差异，则代码中可能存在复杂的设计。同样，这会增加任何新站点功能的实现时间，因为我们现在必须编写两组前端逻辑。\n更重要的是，用户代理检测本质上是有缺陷的，并且除了面向未来之外的任何东西都是如此。每次出现新的浏览器时，我们都必须调整算法以适应它。误报尤其可怕 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("比如我们的移动网站万一意外地为桌面用户提了供服务，那么就令人讨厌了。\n举例：搜狐的手机wap页面，被电脑访问到了\n\n什么时候使用呢？\n第一，如果我们的用户中囊括了旧款或低端功能手机上的用户，则需要注意，我们可能需要采用此策略。因为无论如何，我们需要保证用户的浏览效果。此时可能用户的设备不支持我们的新标签或新功能，而是支持"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XHTML")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MP")]),t._v("或旧版"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WML")]),t._v("等格式，此时开发两套网站效果更好。\n第二，有一种情况是这种方法真的比其他方法更有效。如果我们需要在移动设备上为用户提供的功能与桌面上的功能极为不同，那么使用单独的网站可能是最实用的选择。这是因为我们可以选择向手机和"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PC")]),t._v("发送完全独立的"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("，JavaScript和"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("。\n第三，另外不多见的情况，是我们被迫使用此方法。比如，无论出于何种原因，无法修改现有的桌面网站，并且需要拥有"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("％独立的移动网站。虽然它不理想，但至少我们有这个选择去完成工作。\n注意：开发的时候需要适配不同尺寸的移动设备的屏幕。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v("响应式设计\n响应式设计采用不同的屏幕尺寸来呈现在各种设备（例如移动电话或者平板电脑）下的可视情况。响应式设计视图使我们可以很容易地看到我们的网站或者网站app在不同屏幕尺寸下的外观。\n响应式布局并不是自适应页面，他们有区别：\n解决的问题不一样\n自适应是为了解决如何才能在不同大小的设备上呈现相同的网页。手机的屏幕比较小，宽度通常在"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v("像素以下，pc的像素一般在"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("像素以上，部分配置高的笔记本在"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v("像素以上的也有，同样的页面要显示在不同的设备上面，还要呈现出满意的效果，不是一件容易的事情。因此就有人想出了一个办法，能不能"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一次设计，普遍适用"')]),t._v("，让同一张网页自动适应不同大小的屏幕，根据屏幕的宽度，自动调节网页的内容大小，但是无论怎么样子，他们的主体的内容和布局是没有变化的。\n应式的概念是覆盖了自适应，但是包括的东西更多了。响应式布局可以根据屏幕的大小自动的调整页面的展现方式，以及布局。比如曾经做过的圣杯页面。\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("响应式布局的一些技术点：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("允许网页的宽度自动调整")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("尽量少使用绝对的宽度，多点百分比")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("相对大小的字体"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("字体不要使用px写死，最好使用相对大小的em，或者高清方案rem，这个不限制与字体，别的属性也可以这么设置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("流式布局，比如float。float的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("选择使用css的@media多媒体查询，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link rel"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylesheet"')]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/css"')]),t._v(" media"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"screen and (max-device-width: 400px)"')]),t._v(" href"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tinyScreen.css"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("，这个意思是如果屏幕宽度小于"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("像素（max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("device"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("px），就加载tinyScreen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("css文件。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("根据屏幕尺寸缩放调整内容布局。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("图片的自适应\n也就是实现图片的自动缩放，比如：img "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("。\n但是，有条件的话，最好还是根据不同大小的屏幕，加载不同分辨率的图片。毕竟需要考虑移动端用户的流量使用问题。\n优点：\n面对不同分辨率设备灵活性强\n能够快捷解决多设备显示适应问题\n和单独开发不同网站对比，极大的减少了代码量\n缺点：\n兼容各种设备工作量大，效率低下\n代码累赘，会出现隐藏无用的元素，加载时间加长\n一定程度上改变了网站原有的布局结构，会出现用户混淆的情况\n当需要为用户展现不同内容的时候，满足不了需求\n其实这是一种折中性质的设计解决方案，多方面因素影响而达不到最佳效果\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.3")]),t._v("混合方法\n混合方法旨在通过组合以上两种开发方式，来避免单独的站点和响应式设计方法的一些缺点。\n这种混合方法的核心是将移动开发分解为三个目标，然后应用可用的最佳技术来单独处理每个目标。我们以一种可能的技术组合为例，但在不同的情况下，不同的组合是适当的。要记住的最重要的概念是服务器端和客户端技术可以组合以适应你的情况。\n示例：\n\n对于Mozilla的Web "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v("'Enusion演示站点，使用了混合方法的基本版本，并取得了良好成果。\n我们使用响应式网页设计的一些元素为网站提供移动布局，以及用户代理检测，以提供适合移动设备的视频，并在用户使用手机时重新设计加载内容。\n如果移动端和web端内容非常不同，可以考虑使用混合方法。\n例如，可以通过整合媒体查询和灵活的布局来提高单独网站设计的灵活性。甚至可以使我们的移动网站设计具有足够的适应性，以便舒适地扩展到平板电脑。\n混合方法的缺点：\n混合方法的一个缺点是它可能导致客户端和服务器端的代码路径数量增加。这使得开发比其他方法更耗时。但是，通过适当的规划，代码仍然可以以可维护的方式进行组织。\n另一个缺点是，由于这种方法依赖于响应式设计，因此通常在新项目或具有现有灵活布局的项目上效果最佳，而不是作为改造。同样，因为它使用用户代理检测，所以我们必须随着时间的推移更新检测规则。\n\n拓展：\n响应式网页设计非常棒 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 现在它是最好的技术，可以在各种情况下使布局看起来尽可能好。如果我们的移动和桌面用例足够相似，那么这绝对是布局更改的首选选项。但是，使用客户端技术来改变站点内容以适应用户的上下文可能会很麻烦。\n\n幸运的是，我们在技术上并不局限于使用客户端技术：另一种选择是使用服务器端用户代理检测向用户显示正确的内容。这样可以保持在服务器端更改内容的复杂性，但仍然允许我们的布局从响应式设计的灵活性和未来准备中受益。\n\n使用专门针对内容而非布局的用户代理检测还允许我们为每个内容提供单个"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("，以便内容可以使其布局适应用户的浏览器。这通常被认为是一件好事。我们只是将用户重定向到他们关心的内容页面，而不是维护两个完全不同的网站。由于设计是响应式的，因此我们知道每个页面在用户屏幕上看起来都尽可能好。\n\n我们还可以通过结合服务器端技术来解决响应式设计的一些性能问题。例如，一个经常被批评的关于响应式网页设计的观点是，全分辨率图像被发送到所有设备，包括显示图像按比例缩小的手机。处理此问题的一种此类技术使用服务器端用户代理检测以及"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WURFL")]),t._v("设备功能库来为用户的设备发送适当大小的图像。一个系列的产品也不断出现这种提供的服务。当然，这种技术存在与用户代理检测相关的所有缺点。但即使它不起作用，在性能方面也不比仅使用更差流体图像。\n\n通过结合上面列出的技术，我们可以获得一种移动Web开发策略，该策略比纯粹的独立站点更灵活，并且比纯响应式设计具有更好的性能。\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);