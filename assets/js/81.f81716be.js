(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{616:function(s,t,a){"use strict";a.r(t);var r=a(1),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"web中的音频和视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web中的音频和视频"}},[s._v("#")]),s._v(" web中的音频和视频")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("web 中的音频和视频"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("发展\nweb 开发者们一直以来想在 Web 中使用音频和视频，自"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("世纪初以来，我们的带宽开始能够支持任意类型的视频（视频文件比文本和图片要大的多）。在早些时候，传统的 web 技术（如 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML")]),s._v(" ）不能够在 Web 中嵌入音频和视频，所以一些像 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Flash")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("后来有 Silverlight "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 的专利技术在处理这些内容上变得很受欢迎。这些技术能够正常的工作，但是却有着一系列的问题，包括无法很好的支持 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CSS")]),s._v(" 特性、安全问题，以及可行性问题。\n传统的解决方案能够解决许多这样的问题，前提是它能够正确的工作。幸运的是，几年之后 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" 标准提出，其中有许多的新特性，包括 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ˈvɪdioʊ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("和 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ˈɔ"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("dioʊ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("标签，以及一些 JavaScript 和 APIs 用于对其进行控制。在这里，我们不讨论有关 JavaScript 的问题，仅仅讲解有关 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML")]),s._v(" 的基础。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 允许你简单的嵌入一段视频。\n一个简单的例子如下：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" audio/rabbit320.webm "')]),s._v(" controls"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("您的浏览器不支持"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v("视频。这里是一个 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rabbit320.webm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("链接到视频的"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 替代"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n其中的属性如下"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\nsrc\n同 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("img"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签使用方式相同，src 属性指向你想要嵌入网页当中的视频资源，他们的使用方式完全相同。\ncontrols\n用户必须能够控制视频和音频的回放功能。你可以使用浏览器提供的控制接口，同时你也可以在 JavaScript （JavaScript "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API")]),s._v("）当中使用这些控制接口。至少，这些媒体应该包括开始和停止，以及调整音量的功能。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签内的段落\n这个叫做后备内容 — 当浏览器不支持 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签的时候，它将会显示出来，它使我们能够对旧的浏览器做一些兼容处理。你可以添加任何后备内容，在这个例子中我们提供了一个指向这个视频文件的链接，从而使用户可以至少访问到这个文件，而不会局限于浏览器的支持。\n示例效果：\n\n对比如下代码看不同：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Piper.2016.PROPER.BluRay.mkv"')]),s._v(" controls"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("您的浏览器不支持"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v("视频。这里是一个 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rabbit320.webm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("链接到视频的"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 替代"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n效果图：\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.2")]),s._v("多格式支持\n以上的例子中有一个问题，如果尝试使用像 Safari 或者 Internet Explorer 这些浏览器来访问上面的链接。视频并不会播放，这是因为不同的浏览器对视频格式的支持不同。\n我们先来快速的了解一下术语。像 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP3")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP4")]),s._v("、WebM这些术语叫做容器格式。他们是用不同的方式来播放音频或者视频的 — 也就是说这些容器是用不同的音频轨道、视频轨道、元数据来呈现媒体文件的。\n视频和音频都有不同的格式，如下\nWebM 容器通常包括了 Ogg Vorbis 音频和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VP8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VP9")]),s._v(" 视频。主要在 FireFox 和 Chrome 当中支持。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP4")]),s._v(" 容器通常包括 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AAC")]),s._v(" 以及 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP3")]),s._v(" 音频和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("H")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".264")]),s._v(" 视频。主要在 Internet Explorer 和 Safari 当中支持。\n老式的 Ogg 容器往往支持 Ogg Vorbis  音频和 Ogg Theora 视频。主要在 Firefox 和 Chrome 当中支持，不过这个容器已经被更强大的 WebM 容器所取代。\n音频播放器将会直接播放音频文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("例如 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP3")]),s._v(" 和 Ogg 文件，这些不需要容器。\n以上的格式主要用于将音频和视频压缩成可管理的文件（原始的音频和视频文件非常大）。浏览器包含了不同的 Codecs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("，如 Vorbis 和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("H")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".264")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("，它们用来将已压缩的音频和视频转化成二进制数字。正如刚才所说，浏览器并不全支持相同的 codecs，所以你得使用几个不同格式的文件来兼容不同的浏览器。如果你使用的格式都得不到浏览器的支持，那么媒体文件将不会播放。\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("音频格式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("H")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".264")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("视频格式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 是被广泛支持的两种格式，并且质量良好。然而，他们却有专利的阻碍 — "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP3")]),s._v(" 的专利会持续到"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2017")]),s._v("年（当然，现在解除了）。而 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("H")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".264")]),s._v(" 会持续到"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2027")]),s._v("年早期。也就是说浏览器若想要支持这些格式，就得支付高额的费用。此外，许多人反对软件技术垄断，支持开源的格式。这就是为什么我们需要准备不同的格式来兼容不同的浏览器。\n我们该怎么做呢？请看如下：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video controls"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/rabbit320.mp4"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/mp4"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" audio/rabbit320.webm"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/webm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Your browser doesn't support "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" video"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Here is a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" audio/rabbit320.mp4"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("link to the video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" instead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n现在我们将 src 属性从 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签中移除，转而将它放在几个单独的标签 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 当中。在这个例子当中，浏览器将会检查 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sɔ"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("rs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("标签，并且播放第一个与其自身 codec（编解码器） 相匹配的媒体。你的视频应当包括 WebM 和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MP4")]),s._v(" 两种格式，这两种在目前已经足够支持大多数平台和浏览器。\n每个 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签页含有一个 type 属性，这个属性是可选的，但是建议你添加上这个属性 — 它包含了视频文件的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MIME")]),s._v(" types ，同时浏览器也会通过检查这个属性来迅速的跳过那些不支持的格式。如果你没有添加 type 属性，浏览器会尝试加载每一个文件，直到找到一个能正确播放的格式，这样会消耗掉大量的时间和资源。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.3")]),s._v("其他 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 特性\n第三个例子：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text/css"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  video "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      background"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video controls width"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"400"')]),s._v(" height"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"400"')]),s._v("\n           loop muted preload"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto"')]),s._v("\n           poster"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"image/72b0.jpg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/rabbit320.mp4"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/mp4"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/rabbit320.webm"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/webm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Your browser doesn't support "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" video"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Here is a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/rabbit320.mp4"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("link to the video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" instead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n新的特性：\nwidth 和 height\n你可以用属性控制视频的尺寸，也可以用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CSS")]),s._v(" 来控制视频尺寸。 无论使用哪种方式，视频都会保持它原始的长宽比 — 也叫做纵横比。如果你设置的尺寸没有保持视频原始长宽比，那么视频边框将会拉伸，而未被视频内容填充的部分，将会显示默认的背景颜色。\nautoplay\n这个属性会使音频和视频内容立即播放，即使页面的其他部分还没有加载完全。建议不要应用这个属性在你的网站上，因为用户们会比较反感自动播放的媒体文件。\nloop\n这个属性可以让音频或者视频文件循环播放。同样不建议使用，除非有必要。\nmuted\n这个属性会导致媒体播放时，默认关闭声音。\nposter\n这个属性指向了一个图像的"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("URL")]),s._v("，这个图像会在视频播放前显示。通常用于粗略的预览或者广告。\npreload\n这个属性被用来缓冲较大的文件，有"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("个值可选：\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),s._v(" ：不缓冲\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto"')]),s._v(" ：页面加载后缓存媒体文件\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"metadata"')]),s._v(" ：仅缓冲文件的元数据\n注意我们并没有使用 autoplay 属性在这个版本的例子中 — 如果当页面一加载就开始播放视频的话，就不会看到 poster 属性的效果了。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签与 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签的使用方式几乎完全相同，有一些细微的差别比如下面的边框不同，一个典型的例子如下：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio controls"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/viper.mp3"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/mp3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" audio/viper.ogg"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"audio/ogg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Your browser doesn't support "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" audio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Here is a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" audio/viper.mp3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("link to the audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" instead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n音频播放器所占用的空间比视频播放器要小，由于它没有视觉部件 — 你只需要显示出能控制音频播放的控件。\naudio与 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 的差异如下：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签不支持 width"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("height 属性 — 由于其并没有视觉部件，也就没有可以设置 width"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("height 的内容。\n同时也不支持 poster 属性 — 同样，没有视觉部件。\n除此之外，"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签支持所有 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签拥有的特性。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("显示音轨文本\n现在，我们将讨论一个略微先进的概念，这个概念将会十分的有用。许多人不想（或者不能）听到 Web 上的音频"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("视频内容，至少在某些情况下是这样的，比如：\n许多人患有听觉障碍（通常来说是很难听清声音的人，或者聋人），所以他们不能听见音频中的声音。\n另外的情况可能是由于人们并不能听音频，可能是因为他们在一个非常嘈杂的环境当中（比如在一个拥挤的酒吧内恰好赶上了球赛 ），也可能是由于他们并不想打扰到其他人（比如在一个十分安静的地方，例如图书馆）。\n有一些人他们不说音频当中的语言，所以他们听不懂，因此他们想要一个副本或者是翻译来帮助他们理解媒体内容。\n给那些听不懂音频语言的人们提供一个音频内容的副本岂不是一件很棒的事情吗？\n所以，感谢 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 使之成为可能，有了 WebVTT 格式，我们可以使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("track"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.1")]),s._v("WebVTT格式\nWebVTT 是一个格式，用来编写文本文件，这个文本文件包含了众多的字符串，这些字符串会带有一些元数据，它们可以用来描述这个字符串将会在视频中显示的时间，甚至可以用来描述这些字符串的样式以及定位信息。这些字符串叫做 cues ，你可以根据不同的需求来显示不同的样式，最常见的如下：\nsubtitle   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ˈsʌbˌtaɪtl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n通过添加翻译字幕，来帮助那些听不懂外国语言的人们理解音频当中的内容。\ncaptions\n同步翻译对白，或是描述一些有重要信息的声音，来帮助那些不能听音频的人们理解音频中的内容。\ntimed descriptions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("'taɪmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" description "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("dɪˈskrɪpʃən"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n将文字转换为音频，用于服务那些有视觉障碍的人。\nWebVTT 文件如下：\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WEBVTT")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22.230")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24.606")]),s._v("\nThis is the first subtitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30.739")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34.074")]),s._v("\nThis is the second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n让其与 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTML")]),s._v(" 媒体一起显示，你需要做如下工作：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("以 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vtt 后缀名保存文件。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("track"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签链接 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vtt 文件， "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("track"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签需放在 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 或 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签当中，同时需要放在所有 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 标签之后。使用 kind 属性来指明是哪一种类型，如 subtitles 、 captions 、 descriptions。然后，使用 srclang 来告诉浏览器你是用什么语言来编写的 subtitles。\n\n如下"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("video controls"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example.mp4"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/mp4"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example.webm"')]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"video/webm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("track kind"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subtitles"')]),s._v(" src"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subtitles_en.vtt"')]),s._v(" srclang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("video"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);